--[[
    Lumina UI Library v3.0
    Advanced UI Framework with Premium Components
    
    Features:
    - Glassmorphism Design
    - Advanced Animations
    - Responsive Components
    - Premium Styling
    - Enhanced Performance
]]

local LuminaUI = {
    Version = "3.0",
    Active = true,
    Connections = {},
    Windows = {}
}

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- Constants
local TWEEN_INFO = TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)

-- Enhanced Theme System
LuminaUI.Themes = {
    Default = {
        Primary = Color3.fromRGB(65, 105, 225),
        Secondary = Color3.fromRGB(45, 45, 45),
        Background = Color3.fromRGB(25, 25, 25),
        CardBackground = Color3.fromRGB(30, 30, 30),
        Text = Color3.fromRGB(255, 255, 255),
        SubText = Color3.fromRGB(200, 200, 200),
        Accent = Color3.fromRGB(90, 130, 250),
        Success = Color3.fromRGB(46, 204, 113),
        Error = Color3.fromRGB(231, 76, 60),
        Warning = Color3.fromRGB(241, 196, 15)
    },
    Dark = {
        Primary = Color3.fromRGB(88, 101, 242),
        Secondary = Color3.fromRGB(35, 35, 35),
        Background = Color3.fromRGB(18, 18, 18),
        CardBackground = Color3.fromRGB(24, 24, 24),
        Text = Color3.fromRGB(255, 255, 255),
        SubText = Color3.fromRGB(180, 180, 180),
        Accent = Color3.fromRGB(114, 137, 218),
        Success = Color3.fromRGB(59, 165, 93),
        Error = Color3.fromRGB(237, 66, 69),
        Warning = Color3.fromRGB(250, 166, 26)
    },
    Light = {
        Primary = Color3.fromRGB(79, 97, 255),
        Secondary = Color3.fromRGB(245, 245, 245),
        Background = Color3.fromRGB(255, 255, 255),
        CardBackground = Color3.fromRGB(250, 250, 250),
        Text = Color3.fromRGB(30, 30, 30),
        SubText = Color3.fromRGB(100, 100, 100),
        Accent = Color3.fromRGB(114, 137, 218),
        Success = Color3.fromRGB(46, 204, 113),
        Error = Color3.fromRGB(231, 76, 60),
        Warning = Color3.fromRGB(241, 196, 15)
    }
}

-- Advanced Utility Functions
local Utility = {
    CreateTween = function(instance, properties, duration)
        return TweenService:Create(
            instance,
            TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
            properties
        )
    end,
    
    CreateElement = function(className, properties, children)
        local element = Instance.new(className)
        
        for property, value in pairs(properties or {}) do
            element[property] = value
        end
        
        for _, child in ipairs(children or {}) do
            child.Parent = element
        end
        
        return element
    end,
    
    ApplyGlassEffect = function(frame)
        local blur = Instance.new("BlurEffect")
        blur.Size = 10
        blur.Parent = frame
        
        local gradient = Instance.new("UIGradient")
        gradient.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0.3),
            NumberSequenceKeypoint.new(1, 0.4)
        })
        gradient.Parent = frame
        
        return {blur = blur, gradient = gradient}
    end,
    
    CreateRipple = function(parent, position)
        local ripple = Instance.new("Frame")
        ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ripple.BackgroundTransparency = 0.6
        ripple.BorderSizePixel = 0
        ripple.Position = position
        ripple.Size = UDim2.new(0, 0, 0, 0)
        ripple.Parent = parent
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = ripple
        
        local expandTween = Utility.CreateTween(ripple, {
            Size = UDim2.new(2, 0, 2, 0),
            Position = UDim2.new(-0.5, 0, -0.5, 0),
            BackgroundTransparency = 1
        }, 0.5)
        
        expandTween:Play()
        expandTween.Completed:Connect(function()
            ripple:Destroy()
        end)
    end
}

-- Enhanced Window Creation
function LuminaUI.CreateWindow(config)
    config = config or {}
    local window = {
        Title = config.Title or "Lumina Window",
        Theme = LuminaUI.Themes[config.Theme or "Default"],
        Size = config.Size or UDim2.new(0, 650, 0, 450),
        Position = config.Position or UDim2.new(0.5, -325, 0.5, -225),
        Minimized = false,
        Tabs = {},
        ActiveTab = nil
    }

    -- Create main GUI elements
    local gui = Utility.CreateElement("ScreenGui", {
        Name = "LuminaUI_" .. HttpService:GenerateGUID(false),
        ResetOnSpawn = false
    })

    -- Protected GUI handling
    if syn and syn.protect_gui then
        syn.protect_gui(gui)
    end
    gui.Parent = CoreGui

    -- Main container with glass effect
    local mainContainer = Utility.CreateElement("Frame", {
        Name = "MainContainer",
        BackgroundColor3 = window.Theme.Background,
        Size = window.Size,
        Position = window.Position,
        ClipsDescendants = true
    })

    -- Apply glass effect and shadows
    local glassEffects = Utility.ApplyGlassEffect(mainContainer)
    local shadow = Utility.CreateElement("ImageLabel", {
        Name = "Shadow",
        BackgroundTransparency = 1,
        Image = "rbxassetid://6015897843",
        ImageColor3 = Color3.new(0, 0, 0),
        ImageTransparency = 0.5,
        Position = UDim2.new(0, -15, 0, -15),
        Size = UDim2.new(1, 30, 1, 30),
        SliceCenter = Rect.new(49, 49, 450, 450),
        ScaleType = Enum.ScaleType.Slice
    })

    -- Advanced Tab System
    function window:CreateTab(tabConfig)
        local tab = {
            Name = tabConfig.Name,
            Icon = tabConfig.Icon,
            Elements = {}
        }

        -- Create tab button with advanced styling
        local tabButton = Utility.CreateElement("TextButton", {
            Name = "Tab_" .. tab.Name,
            BackgroundColor3 = window.Theme.Secondary,
            Size = UDim2.new(1, -20, 0, 40),
            Text = tab.Name,
            Font = Enum.Font.GothamBold,
            TextColor3 = window.Theme.Text,
            TextSize = 14,
            AutoButtonColor = false
        })

        -- Add hover effect
        tabButton.MouseEnter:Connect(function()
            Utility.CreateTween(tabButton, {
                BackgroundColor3 = window.Theme.Primary
            }):Play()
        end)

        tabButton.MouseLeave:Connect(function()
            Utility.CreateTween(tabButton, {
                BackgroundColor3 = window.Theme.Secondary
            }):Play()
        end)

        -- Advanced Component Creation Methods
        function tab:AddButton(buttonConfig)
            local button = {
                Name = buttonConfig.Name,
                Callback = buttonConfig.Callback
            }

            local buttonFrame = Utility.CreateElement("Frame", {
                Name = "Button_" .. button.Name,
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, -40, 0, 45)
            })

            -- Add ripple effect
            buttonFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    Utility.CreateRipple(buttonFrame, UDim2.new(0, input.Position.X, 0, input.Position.Y))
                    if button.Callback then
                        button.Callback()
                    end
                end
            end)

            return button
        end

        -- Add Toggle Component
        function tab:AddToggle(toggleConfig)
            local toggle = {
                Name = toggleConfig.Name,
                Value = toggleConfig.Default or false,
                Callback = toggleConfig.Callback
            }

            local toggleFrame = Utility.CreateElement("Frame", {
                Name = "Toggle_" .. toggle.Name,
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, -40, 0, 45)
            })

            -- Create advanced toggle switch
            local switch = Utility.CreateElement("Frame", {
                Name = "Switch",
                BackgroundColor3 = toggle.Value and window.Theme.Primary or window.Theme.Secondary,
                Size = UDim2.new(0, 40, 0, 24)
            })

            function toggle:Set(value)
                toggle.Value = value
                Utility.CreateTween(switch, {
                    BackgroundColor3 = value and window.Theme.Primary or window.Theme.Secondary
                }):Play()
                if toggle.Callback then
                    toggle.Callback(value)
                end
            end

            return toggle
        end

        -- Add Slider Component
        function tab:AddSlider(sliderConfig)
            local slider = {
                Name = sliderConfig.Name,
                Min = sliderConfig.Min or 0,
                Max = sliderConfig.Max or 100,
                Value = sliderConfig.Default or 50,
                Callback = sliderConfig.Callback
            }

            local sliderFrame = Utility.CreateElement("Frame", {
                Name = "Slider_" .. slider.Name,
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, -40, 0, 60)
            })

            -- Create advanced slider bar
            local sliderBar = Utility.CreateElement("Frame", {
                Name = "SliderBar",
                BackgroundColor3 = window.Theme.Secondary,
                Size = UDim2.new(1, -20, 0, 6)
            })

            function slider:Set(value)
                slider.Value = math.clamp(value, slider.Min, slider.Max)
                local percent = (slider.Value - slider.Min) / (slider.Max - slider.Min)
                
                Utility.CreateTween(sliderBar, {
                    Size = UDim2.new(percent, 0, 1, 0)
                }):Play()

                if slider.Callback then
                    slider.Callback(slider.Value)
                end
            end

            return slider
        end

        -- Add Dropdown Component
        function tab:AddDropdown(dropConfig)
            local dropdown = {
                Name = dropConfig.Name,
                Options = dropConfig.Options or {},
                Value = dropConfig.Default,
                Callback = dropConfig.Callback
            }

            local dropdownFrame = Utility.CreateElement("Frame", {
                Name = "Dropdown_" .. dropdown.Name,
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, -40, 0, 45)
            })

            -- Create advanced dropdown menu
            local optionsFrame = Utility.CreateElement("ScrollingFrame", {
                Name = "Options",
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, 0, 0, 0),
                Visible = false
            })

            function dropdown:Set(value)
                dropdown.Value = value
                if dropdown.Callback then
                    dropdown.Callback(value)
                end
            end

            return dropdown
        end

        -- Add ColorPicker Component
        function tab:AddColorPicker(colorConfig)
            local colorPicker = {
                Name = colorConfig.Name,
                Color = colorConfig.Default or Color3.new(1, 1, 1),
                Callback = colorConfig.Callback
            }

            local pickerFrame = Utility.CreateElement("Frame", {
                Name = "ColorPicker_" .. colorPicker.Name,
                BackgroundColor3 = window.Theme.CardBackground,
                Size = UDim2.new(1, -40, 0, 45)
            })

            -- Create advanced color picker interface
            local colorDisplay = Utility.CreateElement("Frame", {
                Name = "ColorDisplay",
                BackgroundColor3 = colorPicker.Color,
                Size = UDim2.new(0, 30, 0, 30)
            })

            function colorPicker:Set(color)
                colorPicker.Color = color
                Utility.CreateTween(colorDisplay, {
                    BackgroundColor3 = color
                }):Play()
                
                if colorPicker.Callback then
                    colorPicker.Callback(color)
                end
            end

            return colorPicker
        end

        return tab
    end

    -- Add notification system
    function window:CreateNotification(notifConfig)
        local notification = {
            Title = notifConfig.Title or "Notification",
            Text = notifConfig.Text or "",
            Duration = notifConfig.Duration or 3,
            Type = notifConfig.Type or "Info"
        }

        local notifFrame = Utility.CreateElement("Frame", {
            Name = "Notification",
            BackgroundColor3 = window.Theme.CardBackground,
            Position = UDim2.new(1, -330, 1, -60),
            Size = UDim2.new(0, 300, 0, 60),
            Visible = false
        })

        -- Animate notification
        Utility.CreateTween(notifFrame, {
            Position = UDim2.new(1, -330, 1, -80)
        }):Play()

        task.delay(notification.Duration, function()
            Utility.CreateTween(notifFrame, {
                Position = UDim2.new(1, 0, 1, -80)
            }):Play()
            task.delay(0.5, function()
                notifFrame:Destroy()
            end)
        end)

        return notification
    end

    return window
end

-- Initialize library
if getgenv then
    getgenv().LuminaUI = LuminaUI
end

return LuminaUI
